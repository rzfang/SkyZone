<header>
  <nav>
    <a each={Tb in state.Tbs} class={Tb.IsCrnt && 'Crnt'} href={Tb.Lnk}>{Tb.Txt}</a>
  </nav>
  <style>
    :host { line-height: 2rem; background-color: #f0f0f0; }
    :host a { margin-right: 10px; }
    :host a.Crnt { font-size: 1.2rem; color: #202020; };
    :host a.Crnt:hover { text-decoration: none; cursor: default; }
  </style>
  <script>
    export default {
      state: {
        Tbs: [
          { Lnk: '/about', Txt: '關於', IsCrnt: false },
          { Lnk: '/blogs', Txt: '網誌', IsCrnt: false },
          { Lnk: '/messages', Txt: '留言', IsCrnt: false },
          { Lnk: '/feed.xml', Txt: '訂閱', IsCrnt: false },
          { Lnk: '/', Txt: '回入口', IsCrnt: false },
        ]
      },

      onBeforeMount (Prps, { Tbs }) {
        let Pthnm = '';

        this.OnNode(Rqst => { Pthnm = Rqst.url; });
        this.OnBrowser(() => { Pthnm = window.location.pathname; });

        Tbs.find((Tb, Idx) => {
          if (Tb.Lnk !== Pthnm) { return false; }

          this.state.Tbs[Idx].IsCrnt = true;

          return true;
        });
      }
    }
  </script>
</header>
