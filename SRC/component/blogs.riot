<blogs>
  <ul>
    <li each={Blg in props.list}>
      <div>
        <a href='/blog/{Blg.ID}'>{Blg.Ttl}</a>
      </div>
      <pre>{Blg.Smry}</pre>
      <div>
        <span each={Tg in Blg.Tg}>{Tg.Nm}</span>
      </div>
      <div>{Blg.Dt}</div>
    </li>
  </ul>
  <div>
    <a if={!props.allLoaded} href='javascript:void(0);' onclick={BlogsLoad}>載入更多</a>
    <a href='javascript:void(0);' onclick={ScrollToTop}>回到頂端</a>
  </div>
  <style>
    :host>ul { list-style: none; margin: 0; padding: 0; }
    :host>ul>li { margin-bottom: 20px; line-height: 1.5; }
    :host>ul>li>div:first-child>a { font-size: 1.3rem; }
    :host>ul>li>pre { white-space: pre-line; }
    :host>ul>li>pre~div { color: #808080; }
    :host>ul>li>pre~div>span { display: inline-block; margin-right: 5px; }
    :host>div { text-align: center; }
    :host>div>a:last-child { display: inline-block; position: absolute; right: 0; }
  </style>
  <script>
    import icon from './icon.riot';

    export default {
      components: { icon },

      ScrollToTop () {
        window.scrollTo(0, 0);
      },

      BlogsLoad (Evt) {
        const { list: Blgs, allLoaded: HsAlLdd } = this.props;
        const Ofst = Blgs.length;

        if (HsAlLdd) { return; }

        const TgIds = this.props.tags.filter(Tg => Tg.ID && Tg.IsPckd).map(Tg => Tg.ID);

        this.ServiceCall(
          { Mthd: 'GET', Url: '/service/blog/list' },
          { Lmt: 5, Ofst, TgIDA: TgIds },
          'BLOGS',
          (Sto, Rst) => {
            if (Rst.Index < 0) {
              alert(Rst.Message);

              return null;
            }

            return Rst.Extend;
          },
          { TgIds, Ofst });
      }
    }
  </script>
</blogs>
